services:
  pgsql:
    image: postgres:alpine
    ports:
      - "5432:5432"
    container_name: fullstack_dev
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: teste1234567891
      POSTGRES_DB: postgresdb
    volumes:
      - pg-data:/var/lib/postgresql/data
    networks:
      - iff
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin4:
    image: dpage/pgadmin4
    container_name: aws_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: "teste@gmail.com"
      PGADMIN_DEFAULT_PASSWORD: "1q2w3e4r"
    ports:
      - '8080:80'
    networks:
      - iff

  api:
    container_name: api-todo
    build:
      context: ./todo_back/todo-list
      dockerfile: Dockerfile
    restart: always
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "teste1234567891"
      POSTGRES_DB: "postgresdb"
    ports:
      - "3000:3000"
    depends_on:
      pgsql:
        condition: service_healthy
    networks:
      - iff

  react:
    container_name: react-todo
    build: ./todo
    restart: always
    ports:
      - "3001:3001"
    depends_on:
      - api
    networks:
      - iff

volumes:
  pg-data:

networks:
  iff:
